### YamlMime:ManagedReference
items:
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager
  commentId: T:ServerCore.EDMO.Communication.EDMOConnectionManager
  id: EDMOConnectionManager
  parent: ServerCore.EDMO.Communication
  children:
  - ServerCore.EDMO.Communication.EDMOConnectionManager.#ctor
  - ServerCore.EDMO.Communication.EDMOConnectionManager.Dispose
  - ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablished
  - ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLost
  - ServerCore.EDMO.Communication.EDMOConnectionManager.Start
  - ServerCore.EDMO.Communication.EDMOConnectionManager.Stop
  langs:
  - csharp
  - vb
  name: EDMOConnectionManager
  nameWithType: EDMOConnectionManager
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager
  type: Class
  source:
    remote:
      path: ServerCore/EDMO/Communication/EDMOConnectionManager.cs
      branch: master
      repo: https://github.com/TeamEDMO/ServerVNext.git
    id: EDMOConnectionManager
    path: ../ServerVNext/ServerCore/EDMO/Communication/EDMOConnectionManager.cs
    startLine: 34
  assemblies:
  - ServerCore
  namespace: ServerCore.EDMO.Communication
  summary: >-
    A high level management class to search for and manage <xref href="ServerCore.EDMO.Communication.EDMOConnection" data-throw-if-not-resolved="false"></xref>s.

    <br />

    This manager is also responsible for merging multiple communication channels to the same EDMO robot into a composite variant of <xref href="ServerCore.EDMO.Communication.EDMOConnection" data-throw-if-not-resolved="false"></xref>, known as <xref href="ServerCore.EDMO.Communication.FusedEDMOConnection" data-throw-if-not-resolved="false"></xref>.

    <br />

    Connections are managed in a background thread.
  remarks: >-
    <p>

    Currently, this manager attempts to establish communication to EDMO robots via <xref href="ServerCore.Communication.Serial.SerialCommunicationManager" data-throw-if-not-resolved="false"></xref> and <xref href="ServerCore.Communication.UDP.UdpCommunicationManager" data-throw-if-not-resolved="false"></xref><code>{PollMessage="ED\0MO", port=2121}</code>.

    </p>

    <p>

    <xref href="ServerCore.EDMO.Communication.EDMOConnection" data-throw-if-not-resolved="false"></xref>s are fused together based on their identifier. There is an expectation that every unique EDMO robot would have a unique identifier. Having multiple EDMO robots with the same identifier will result in undefined behaviour.

    </p>


    <p>

    Serial communication will be prioritised over UDP connection if available. Transitions between the two will be silent.

    </p>
  example: []
  syntax:
    content: 'public class EDMOConnectionManager : IDisposable'
    content.vb: Public Class EDMOConnectionManager Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablished
  commentId: P:ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablished
  id: EDMOConnectionEstablished
  parent: ServerCore.EDMO.Communication.EDMOConnectionManager
  langs:
  - csharp
  - vb
  name: EDMOConnectionEstablished
  nameWithType: EDMOConnectionManager.EDMOConnectionEstablished
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablished
  type: Property
  source:
    remote:
      path: ServerCore/EDMO/Communication/EDMOConnectionManager.cs
      branch: master
      repo: https://github.com/TeamEDMO/ServerVNext.git
    id: EDMOConnectionEstablished
    path: ../ServerVNext/ServerCore/EDMO/Communication/EDMOConnectionManager.cs
    startLine: 60
  assemblies:
  - ServerCore
  namespace: ServerCore.EDMO.Communication
  summary: An event that is raised whenever a new EDMO robot is connected;
  remarks: This is only fired when an EDMO first connects. This does not get raised if another connection is established to the same EDMO robot.
  example: []
  syntax:
    content: public EDMOConnectionManager.EDMOConnectionEstablishedHandler? EDMOConnectionEstablished { get; set; }
    parameters: []
    return:
      type: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablishedHandler
    content.vb: Public Property EDMOConnectionEstablished As EDMOConnectionManager.EDMOConnectionEstablishedHandler
  overload: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablished*
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLost
  commentId: P:ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLost
  id: EDMOConnectionLost
  parent: ServerCore.EDMO.Communication.EDMOConnectionManager
  langs:
  - csharp
  - vb
  name: EDMOConnectionLost
  nameWithType: EDMOConnectionManager.EDMOConnectionLost
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLost
  type: Property
  source:
    remote:
      path: ServerCore/EDMO/Communication/EDMOConnectionManager.cs
      branch: master
      repo: https://github.com/TeamEDMO/ServerVNext.git
    id: EDMOConnectionLost
    path: ../ServerVNext/ServerCore/EDMO/Communication/EDMOConnectionManager.cs
    startLine: 68
  assemblies:
  - ServerCore
  namespace: ServerCore.EDMO.Communication
  summary: An event that is raised whenever a new EDMO robot is connected;
  remarks: This is only fired when the last connection of EDMO is lost. This does not get raised if there is still another connection to the same EDMO robot.
  example: []
  syntax:
    content: public EDMOConnectionManager.EDMOConnectionLostHandler? EDMOConnectionLost { get; set; }
    parameters: []
    return:
      type: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLostHandler
    content.vb: Public Property EDMOConnectionLost As EDMOConnectionManager.EDMOConnectionLostHandler
  overload: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLost*
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.#ctor
  commentId: M:ServerCore.EDMO.Communication.EDMOConnectionManager.#ctor
  id: '#ctor'
  parent: ServerCore.EDMO.Communication.EDMOConnectionManager
  langs:
  - csharp
  - vb
  name: EDMOConnectionManager()
  nameWithType: EDMOConnectionManager.EDMOConnectionManager()
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionManager()
  type: Constructor
  source:
    remote:
      path: ServerCore/EDMO/Communication/EDMOConnectionManager.cs
      branch: master
      repo: https://github.com/TeamEDMO/ServerVNext.git
    id: .ctor
    path: ../ServerVNext/ServerCore/EDMO/Communication/EDMOConnectionManager.cs
    startLine: 75
  assemblies:
  - ServerCore
  namespace: ServerCore.EDMO.Communication
  summary: >-
    A high level management class to search for and manage <xref href="ServerCore.EDMO.Communication.EDMOConnection" data-throw-if-not-resolved="false"></xref>s.

    <br />

    This manager is also responsible for merging multiple communication channels to the same EDMO robot into a composite variant of <xref href="ServerCore.EDMO.Communication.EDMOConnection" data-throw-if-not-resolved="false"></xref>, known as <xref href="ServerCore.EDMO.Communication.FusedEDMOConnection" data-throw-if-not-resolved="false"></xref>.

    <br />

    Connections are managed in a background thread.
  remarks: >-
    <p>

    Currently, this manager attempts to establish communication to EDMO robots via <xref href="ServerCore.Communication.Serial.SerialCommunicationManager" data-throw-if-not-resolved="false"></xref> and <xref href="ServerCore.Communication.UDP.UdpCommunicationManager" data-throw-if-not-resolved="false"></xref><code>{PollMessage="ED\0MO", port=2121}</code>.

    </p>

    <p>

    <xref href="ServerCore.EDMO.Communication.EDMOConnection" data-throw-if-not-resolved="false"></xref>s are fused together based on their identifier. There is an expectation that every unique EDMO robot would have a unique identifier. Having multiple EDMO robots with the same identifier will result in undefined behaviour.

    </p>


    <p>

    Serial communication will be prioritised over UDP connection if available. Transitions between the two will be silent.

    </p>
  example: []
  syntax:
    content: public EDMOConnectionManager()
    content.vb: Public Sub New()
  overload: ServerCore.EDMO.Communication.EDMOConnectionManager.#ctor*
  nameWithType.vb: EDMOConnectionManager.New()
  fullName.vb: ServerCore.EDMO.Communication.EDMOConnectionManager.New()
  name.vb: New()
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.Start
  commentId: M:ServerCore.EDMO.Communication.EDMOConnectionManager.Start
  id: Start
  parent: ServerCore.EDMO.Communication.EDMOConnectionManager
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: EDMOConnectionManager.Start()
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.Start()
  type: Method
  source:
    remote:
      path: ServerCore/EDMO/Communication/EDMOConnectionManager.cs
      branch: master
      repo: https://github.com/TeamEDMO/ServerVNext.git
    id: Start
    path: ../ServerVNext/ServerCore/EDMO/Communication/EDMOConnectionManager.cs
    startLine: 178
  assemblies:
  - ServerCore
  namespace: ServerCore.EDMO.Communication
  summary: Starts this communication manager. This communication manager will search for and attempt connections asynchronously.
  example: []
  syntax:
    content: public void Start()
    content.vb: Public Sub Start()
  overload: ServerCore.EDMO.Communication.EDMOConnectionManager.Start*
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.Stop
  commentId: M:ServerCore.EDMO.Communication.EDMOConnectionManager.Stop
  id: Stop
  parent: ServerCore.EDMO.Communication.EDMOConnectionManager
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: EDMOConnectionManager.Stop()
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.Stop()
  type: Method
  source:
    remote:
      path: ServerCore/EDMO/Communication/EDMOConnectionManager.cs
      branch: master
      repo: https://github.com/TeamEDMO/ServerVNext.git
    id: Stop
    path: ../ServerVNext/ServerCore/EDMO/Communication/EDMOConnectionManager.cs
    startLine: 190
  assemblies:
  - ServerCore
  namespace: ServerCore.EDMO.Communication
  summary: Stops this communication manager. This communication manager will no longer search for communication channels.
  example: []
  syntax:
    content: public void Stop()
    content.vb: Public Sub [Stop]()
  overload: ServerCore.EDMO.Communication.EDMOConnectionManager.Stop*
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.Dispose
  commentId: M:ServerCore.EDMO.Communication.EDMOConnectionManager.Dispose
  id: Dispose
  parent: ServerCore.EDMO.Communication.EDMOConnectionManager
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: EDMOConnectionManager.Dispose()
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.Dispose()
  type: Method
  source:
    remote:
      path: ServerCore/EDMO/Communication/EDMOConnectionManager.cs
      branch: master
      repo: https://github.com/TeamEDMO/ServerVNext.git
    id: Dispose
    path: ../ServerVNext/ServerCore/EDMO/Communication/EDMOConnectionManager.cs
    startLine: 204
  assemblies:
  - ServerCore
  namespace: ServerCore.EDMO.Communication
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: ServerCore.EDMO.Communication.EDMOConnectionManager.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: ServerCore.EDMO.Communication.EDMOConnection
  commentId: T:ServerCore.EDMO.Communication.EDMOConnection
  parent: ServerCore.EDMO.Communication
  href: ServerCore.EDMO.Communication.EDMOConnection.html
  name: EDMOConnection
  nameWithType: EDMOConnection
  fullName: ServerCore.EDMO.Communication.EDMOConnection
- uid: ServerCore.EDMO.Communication.FusedEDMOConnection
  commentId: T:ServerCore.EDMO.Communication.FusedEDMOConnection
  parent: ServerCore.EDMO.Communication
  href: ServerCore.EDMO.Communication.FusedEDMOConnection.html
  name: FusedEDMOConnection
  nameWithType: FusedEDMOConnection
  fullName: ServerCore.EDMO.Communication.FusedEDMOConnection
- uid: ServerCore.Communication.Serial.SerialCommunicationManager
  commentId: T:ServerCore.Communication.Serial.SerialCommunicationManager
  href: ServerCore.Communication.Serial.SerialCommunicationManager.html
  name: SerialCommunicationManager
  nameWithType: SerialCommunicationManager
  fullName: ServerCore.Communication.Serial.SerialCommunicationManager
- uid: ServerCore.Communication.UDP.UdpCommunicationManager
  commentId: T:ServerCore.Communication.UDP.UdpCommunicationManager
  href: ServerCore.Communication.UDP.UdpCommunicationManager.html
  name: UdpCommunicationManager
  nameWithType: UdpCommunicationManager
  fullName: ServerCore.Communication.UDP.UdpCommunicationManager
- uid: ServerCore.EDMO.Communication
  commentId: N:ServerCore.EDMO.Communication
  href: ServerCore.html
  name: ServerCore.EDMO.Communication
  nameWithType: ServerCore.EDMO.Communication
  fullName: ServerCore.EDMO.Communication
  spec.csharp:
  - uid: ServerCore
    name: ServerCore
    href: ServerCore.html
  - name: .
  - uid: ServerCore.EDMO
    name: EDMO
    href: ServerCore.EDMO.html
  - name: .
  - uid: ServerCore.EDMO.Communication
    name: Communication
    href: ServerCore.EDMO.Communication.html
  spec.vb:
  - uid: ServerCore
    name: ServerCore
    href: ServerCore.html
  - name: .
  - uid: ServerCore.EDMO
    name: EDMO
    href: ServerCore.EDMO.html
  - name: .
  - uid: ServerCore.EDMO.Communication
    name: Communication
    href: ServerCore.EDMO.Communication.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablished*
  commentId: Overload:ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablished
  href: ServerCore.EDMO.Communication.EDMOConnectionManager.html#ServerCore_EDMO_Communication_EDMOConnectionManager_EDMOConnectionEstablished
  name: EDMOConnectionEstablished
  nameWithType: EDMOConnectionManager.EDMOConnectionEstablished
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablished
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablishedHandler
  commentId: T:ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablishedHandler
  parent: ServerCore.EDMO.Communication
  href: ServerCore.EDMO.Communication.EDMOConnectionManager.html
  name: EDMOConnectionManager.EDMOConnectionEstablishedHandler
  nameWithType: EDMOConnectionManager.EDMOConnectionEstablishedHandler
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablishedHandler
  spec.csharp:
  - uid: ServerCore.EDMO.Communication.EDMOConnectionManager
    name: EDMOConnectionManager
    href: ServerCore.EDMO.Communication.EDMOConnectionManager.html
  - name: .
  - uid: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablishedHandler
    name: EDMOConnectionEstablishedHandler
    href: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablishedHandler.html
  spec.vb:
  - uid: ServerCore.EDMO.Communication.EDMOConnectionManager
    name: EDMOConnectionManager
    href: ServerCore.EDMO.Communication.EDMOConnectionManager.html
  - name: .
  - uid: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablishedHandler
    name: EDMOConnectionEstablishedHandler
    href: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionEstablishedHandler.html
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLost*
  commentId: Overload:ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLost
  href: ServerCore.EDMO.Communication.EDMOConnectionManager.html#ServerCore_EDMO_Communication_EDMOConnectionManager_EDMOConnectionLost
  name: EDMOConnectionLost
  nameWithType: EDMOConnectionManager.EDMOConnectionLost
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLost
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLostHandler
  commentId: T:ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLostHandler
  parent: ServerCore.EDMO.Communication
  href: ServerCore.EDMO.Communication.EDMOConnectionManager.html
  name: EDMOConnectionManager.EDMOConnectionLostHandler
  nameWithType: EDMOConnectionManager.EDMOConnectionLostHandler
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLostHandler
  spec.csharp:
  - uid: ServerCore.EDMO.Communication.EDMOConnectionManager
    name: EDMOConnectionManager
    href: ServerCore.EDMO.Communication.EDMOConnectionManager.html
  - name: .
  - uid: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLostHandler
    name: EDMOConnectionLostHandler
    href: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLostHandler.html
  spec.vb:
  - uid: ServerCore.EDMO.Communication.EDMOConnectionManager
    name: EDMOConnectionManager
    href: ServerCore.EDMO.Communication.EDMOConnectionManager.html
  - name: .
  - uid: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLostHandler
    name: EDMOConnectionLostHandler
    href: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionLostHandler.html
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.#ctor*
  commentId: Overload:ServerCore.EDMO.Communication.EDMOConnectionManager.#ctor
  href: ServerCore.EDMO.Communication.EDMOConnectionManager.html#ServerCore_EDMO_Communication_EDMOConnectionManager__ctor
  name: EDMOConnectionManager
  nameWithType: EDMOConnectionManager.EDMOConnectionManager
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.EDMOConnectionManager
  nameWithType.vb: EDMOConnectionManager.New
  fullName.vb: ServerCore.EDMO.Communication.EDMOConnectionManager.New
  name.vb: New
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.Start*
  commentId: Overload:ServerCore.EDMO.Communication.EDMOConnectionManager.Start
  href: ServerCore.EDMO.Communication.EDMOConnectionManager.html#ServerCore_EDMO_Communication_EDMOConnectionManager_Start
  name: Start
  nameWithType: EDMOConnectionManager.Start
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.Start
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.Stop*
  commentId: Overload:ServerCore.EDMO.Communication.EDMOConnectionManager.Stop
  href: ServerCore.EDMO.Communication.EDMOConnectionManager.html#ServerCore_EDMO_Communication_EDMOConnectionManager_Stop
  name: Stop
  nameWithType: EDMOConnectionManager.Stop
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.Stop
- uid: ServerCore.EDMO.Communication.EDMOConnectionManager.Dispose*
  commentId: Overload:ServerCore.EDMO.Communication.EDMOConnectionManager.Dispose
  href: ServerCore.EDMO.Communication.EDMOConnectionManager.html#ServerCore_EDMO_Communication_EDMOConnectionManager_Dispose
  name: Dispose
  nameWithType: EDMOConnectionManager.Dispose
  fullName: ServerCore.EDMO.Communication.EDMOConnectionManager.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
